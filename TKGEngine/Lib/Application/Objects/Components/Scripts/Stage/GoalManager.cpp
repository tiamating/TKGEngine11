#include "GoalManager.h"

#include "../Character/Player/PlayerController.h"
#include "../Character/CharacterMoveController.h"

REGISTERCOMPONENT(TKGEngine::GoalManager);

namespace TKGEngine
{
	/////////////////////////////////////////////////////////////////////////
	// 実体生成時に呼び出される
	/////////////////////////////////////////////////////////////////////////
	//void GoalManager::Awake(){}

	/////////////////////////////////////////////////////////////////////////
	// Updateが呼ばれる前に一度だけ呼び出される
	/////////////////////////////////////////////////////////////////////////
	//void GoalManager::Start(){}

	/////////////////////////////////////////////////////////////////////////
	// 毎フレーム呼び出される
	/////////////////////////////////////////////////////////////////////////
	void GoalManager::Update()
	{
		const float delta_time = ITime::Get().DeltaTime();

		if (m_begin_loading)
		{
			// ロード開始までの時間をカウントダウン
			if (m_stop_timer <= 0.0f)
			{
				// InitSceneのロードを実行
				SceneManager::LoadSceneAsync("./Asset/Scenes/InitScene.scene");
			}
			else
			{
				m_stop_timer -= delta_time;
			}
		}
	}

	/////////////////////////////////////////////////////////////////////////
	// Update後に毎フレーム呼び出される
	/////////////////////////////////////////////////////////////////////////
	//void GoalManager::LateUpdate(){}

	/////////////////////////////////////////////////////////////////////////
	// 実体が有効になった時に呼び出される
	/////////////////////////////////////////////////////////////////////////
	//void GoalManager::OnEnable(){}

	/////////////////////////////////////////////////////////////////////////
	// 実体が無効になった時に呼び出される
	/////////////////////////////////////////////////////////////////////////
	//void GoalManager::OnDisable(){}

	/////////////////////////////////////////////////////////////////////////
	// 実体破棄時に呼び出される
	/////////////////////////////////////////////////////////////////////////
	//void GoalManager::OnDestroyed(){}

	void GoalManager::OnTriggerEnter(std::shared_ptr<TKGEngine::Collider>& collider)
	{
		const auto hit_obj = collider->GetGameObject();
		if (hit_obj->GetLayer() == Layer::Player)
		{
			// プレイヤーの移動を不可にする
			if (const auto player_controller = hit_obj->GetComponent<PlayerController>())
			{
				player_controller->SetAllowLStickInput(false);
			}
			if(const auto mover = hit_obj->GetComponent<CharacterMoveController>())
			{
				mover->SetSpeed(0.0f);
				mover->AllowSetParameter(false);
			}

			// InitSceneのロードを開始する
			m_begin_loading = true;
			m_stop_timer = m_stop_time;
		}
	}

	/////////////////////////////////////////////////////////////////////////
	// GUI設定
	/////////////////////////////////////////////////////////////////////////
#ifdef USE_IMGUI
	void GoalManager::OnGUI()
	{
	}
#endif
}
